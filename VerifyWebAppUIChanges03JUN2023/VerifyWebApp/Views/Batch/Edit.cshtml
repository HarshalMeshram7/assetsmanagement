@model VerifyWebApp.Models.Batch

@{
    ViewBag.Title = "Edit";
}
<style>
    label span {
        color: red;
        font-size: 20px;
    }
</style>

@*<div class="modal-content " style="height:530px;width:900px;overflow:auto" id="mymodal">*@
<style>
    input.largerCheckbox {
        width: 20px;
        height: 20px;
    }
</style>

@using (@Html.BeginForm(null, null, FormMethod.Post, new { id = "frmNewEmp", name = "frmNewEmp" }))
{
    @Html.AntiForgeryToken();

    <div class="container-fluid rounded page border shadow">
        <div class="row border-bottom">
            <div class="card">
                <div class="card-header pb-0">
                    <div class="row">
                        <div class="d-sm-flex justify-content-between hborder">
                            <div class="htitle"> <b>Edit Batch</b> </div>
                            
                        </div>
                    </div>

                    <div class="pageconent">
                        <div class="row">
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label for="praticesname">From Date</label>
                                
                                    @Html.TextBoxFor(m => m.FromDate, "{0:yyyy-MM-dd}", new
                                    {
                                       @class = "form-control form-control-sm",
                                       @tabindex = "5",
                                       required = "required",
                                       type = "date",
                                       id = "txtStartDate"
                                   })
                                </div>
                            </div>
                            @*<div style="color:#CC0000;font-weight:400" id="startdateerror">Select Date</div>*@
                            <div class="col-lg-3">
                                <div class="form-group">

                                    <label for="praticesname">To Date</label>


                                    @Html.TextBoxFor(m => m.ToDate, "{0:yyyy-MM-dd}", new
                                     {
                                         @class = "form-control form-control-sm",
                                         @tabindex = "5",
                                         required = "required",
                                         type = "date",
                                         id = "txtEndDate"
                                     })
                                    @*<div style="color:#CC0000;font-weight:400" id="enddateerror">Select Date</div>*@
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label for="praticesname">Batch Description</label>
                                   
                                    @Html.TextBoxFor(m => m.BatchDescription, new
                                    {
                                       @class = "form-control",
                                       required = "required",
                                       id = "BatchDescription"
                                    })

                                </div>
                            </div>

                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label for="praticesname" class="form-group">Isbatchopen </label>&nbsp;&nbsp;

                                    <input id="IsBatchOpen" type="checkbox" class="largerCheckbox" />
                                                      
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <input id="IsRangeSelect" type="checkbox" class="largerCheckbox" />
                                    @*<input type="checkbox" />*@
                                    <label class="form-check-label" for="IsRangeSelect">Select Range</label>
                                    @*@Html.CheckBoxFor(model => model.IsEnabled, new { id = "IsRangeSelect" })*@

                                </div>
                            </div>
                        </div>
                        <input type="range" class="custom-range" id="minvalue" style="width: 19%; color: #935757" min="0" max="100000000" value="0" />

                        <input type="range" class="custom-range" id="maxvalue" style="width:19%" min="0" max="100000000" value="0" />

                        <p>
                            <input type="number" id="selectMinValue" placeholder="Min Value" />
                            <input type="number" id="selectMaxValue" placeholder="Max Value" />
                            <br />
                            <label for="amount">Price range:</label>
                            <label id="minvaluelbl"></label>
                            <label>-</label>
                            <label id="maxvaluelbl"></label>
                        </p>


                        <div class="row">
                            <div class="col-md-12">
                                Location List for Batch
                            </div>
                        </div>
                        <div class="row my-1">
                            <div class="col-md-12">
                                <div class="pull-right">
                                    <button type="button" class="btn btn-sm nBtn" id="btnAddloc" data-toggle="modal">
                                        @*onclick="addLocation()"*@
                                        Add Location
                                    </button>

                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-12">
                                <div class="table-responsive">
                                    <table width="100%" class="table table-striped table-bordered table-hover" id="tbllocation">
                                        <thead>
                                            <tr>

                                                <td>
                                                    Srno
                                                </td>
                                                <td hidden>
                                                    locaid
                                                </td>
                                                <td hidden>
                                                    locbid
                                                </td>
                                                <td hidden>
                                                    loccid
                                                </td>

                                                <td>
                                                    Location
                                                </td>
                                                <td>
                                                    SubLocation
                                                </td>
                                                <td>
                                                    Sub SubLocation C
                                                </td>
                                                <td align="center">
                                                    Edit
                                                </td>
                                                <td align="center">
                                                    Delete
                                                </td>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (Model.SubbatchTable.Count() == 0)
                                            {

                                            }
                                            else
                                            {
                                                foreach (var item in Model.SubbatchTable)
                                                {
                                                    <tr>
                                                        <td>@item.Srno</td>

                                                        <td hidden>@Html.DisplayFor(modelitem => item.LocAId)</td>
                                                        <td hidden>@Html.DisplayFor(modelitem => item.LocBId)</td>
                                                        <td hidden>@Html.DisplayFor(modelitem => item.LocCId)</td>
                                                        <td>@Html.DisplayFor(modelitem => item.LocAName)</td>
                                                        <td>@Html.DisplayFor(modelitem => item.LocBName)</td>
                                                        <td>@Html.DisplayFor(modelitem => item.LocCName)</td>
                                                        <td align="center">
                                                            <button type="button" class="btn modBtn btn-sm"
                                                                    aria-label="Left Align"
                                                                    onclick="Editloc(this,@item.Srno);">
                                                                <i class="fa fa-edit"></i>Edit
                                                            </button>

                                                        </td>
                                                        <td align="center">
                                                            <button type="button" class="btn btn-sm delBtn" aria-label="Left Align" onclick="deleteloc(this);">
                                                                <i class="fa fa-remove"></i>Delete
                                                            </button>
                                                                                        </td>
                                                    </tr>


                                                }
                                            }
                                        </tbody>
                                    </table>

                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                CostCenter List for Batch
                            </div>
                        </div>
                        <div class="row my-1">
                            <div class="col-md-12">
                                <div class="pull-right">
                                    <button type="button" class="btn btn-sm nBtn" id="btnAddCC"
                                            data-toggle="modal">
                                        Add CostCenter
                                    </button>

                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="table-responsive">
                                    <table width="100%" class="table table-striped table-bordered table-hover" id="tblcostcenter">

                                        <thead>
                                            <tr>

                                                <td>
                                                    Srno
                                                </td>
                                                <td hidden>
                                                    ccaid
                                                </td>
                                                <td hidden>
                                                    sccid
                                                </td>
                                                <td>
                                                    Cost Center
                                                </td>
                                                <td>
                                                    Sub-Cost Center
                                                </td>

                                                <td align="center">
                                                    Edit
                                                </td>
                                                <td align="center">
                                                    Delete
                                                </td>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (Model.SubbatchTable2.Count() == 0)
                                            {

                                            }
                                            else
                                            {
                                                foreach (var item in Model.SubbatchTable2)
                                                {
                                                    <tr>
                                                        <td>@item.Srnocc</td>

                                                        <td hidden>@Html.DisplayFor(modelitem => item.CCId)</td>
                                                        <td hidden>@Html.DisplayFor(modelitem => item.SCCId)</td>

                                                        <td>@Html.DisplayFor(modelitem => item.CCDescription)</td>
                                                        <td>@Html.DisplayFor(modelitem => item.SCCDescription)</td>

                                                        <td align="center">
                                                            <button type="button" class="btn modBtn btn-sm"
                                                                    aria-label="Left Align"
                                                                    onclick="Editcc(this,@item.Srnocc);">
                                                                <i class="fa fa-edit"></i>Edit
                                                            </button>

                                                        </td>
                                                        <td align="center">
                                                            <button type="button" class="btn btn-sm delBtn" aria-label="Left Align" onclick="deletecc(this);">
                                                                <i class="fa fa-remove"></i>Delete
                                                            </button>
                                                          
                                                        </td>
                                                    </tr>

                                                }
                                            }
                                        </tbody>
                                    </table>

                                </div>
                            </div>
                        </div>





                        <div class="modal-footer">
                            @*<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>*@
                            <button type="button" class="btn btn-sm saveBtn" data-dismiss="modal" style="margin-right:5px;" onclick="closeloc()">Close</button>
                            <button type="button" class="btn btn-sm clBtn" id="btnSave" onclick="SaveData();">Save</button>
                            @*<button type="button" class="btn btn-sm clBtn" data-dismiss="modal"  onclick="closeloc()">close</button>*@
                        </div>

                        <!-- /.modal-content -->
                        @*</div>*@
                        <div id="locationmodal" class="modal fade" role="dialog" style="height: 600px;" data-backdrop="static" data-keyboard="false">

                            <div class="modal-dialog modal-lg">

                                <!-- Modal content-->
                                <div class="modal-content">
                                    <div class="modal-header">

                                        <h4 class="modal-title">Add Location</h4>
                                    </div>
                                    <div class="modal-body ">

                                        <div class="row">
                                            <div class="form-group col-lg-6">
                                                <label for="praticesname">Location A<span style="color:#CC0000;">*</span></label>
                                                @Html.DropDownList("txtlocA", (SelectList)ViewBag.alocationlist, "Select Location", new { @class = "form-control", id = "txtlocA", @required = true })
                                                <div style="color:#CC0000;font-weight:400" id="locaerror"></div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="form-group col-lg-6">
                                                <label for="praticesname">Location B</label>

                                                <select id="txtlocB" name="txtlocB" class="form-control"></select>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="form-group col-lg-6">
                                                <label for="praticesname">Location C</label>
                                                <select id="txtlocC" name="txtlocC" class="form-control"></select>
                                            </div>
                                        </div>
                                    </div>
                                    <div><label style="font-size:12px;color:red ">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>*</span> Mandatory Fields</label></div>


                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-sm saveBtn" data-bs-dismiss="modal">Close</button>
                                        <button type="button" class="btn btn-sm clBtn" id="btnSave" onclick="saveloc();">Save</button>
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div id="editlocationmodal" class="modal fade" role="dialog" style="height: 600px;" data-backdrop="static" data-keyboard="false">

                            <div class="modal-dialog modal-lg">

                                <!-- Modal content-->
                                <div class="modal-content">
                                    <div class="modal-header">

                                        <h4 class="modal-title">Edit Location</h4>
                                    </div>
                                    <div class="modal-body ">


                                        <div class="row">
                                            <div class="form-group col-lg-6">
                                                <label for="praticesname">Location A<span style="color:#CC0000;">*</span></label>
                                                @Html.DropDownList("txteditlocA", (SelectList)ViewBag.alocationlist, "Select Location", new { @class = "form-control", id = "txteditlocA", @required = true })
                                                <div style="color:#CC0000;font-weight:400" id="editlocaerror"></div>
                                            </div>

                                        </div>
                                        <div class="row">
                                            <div class="form-group col-lg-6">
                                                <label for="praticesname">Location B</label>

                                                <select id="txteditlocB" name="txteditlocB" class="form-control"></select>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="form-group col-lg-6">
                                                <label for="praticesname">Location C</label>
                                                <select id="txteditlocC" name="txteditlocC" class="form-control"></select>
                                            </div>
                                        </div>
                                    </div>
                                    <div><label style="font-size:12px;color:red ">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>*</span> Mandatory Fields</label></div>


                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-sm saveBtn" data-bs-dismiss="modal" onclick="closeeditloc();">Close</button>
                                        <button type="button" class="btn btn-sm clBtn" onclick="saveeditloc();">Save</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div id="editlocationmodal" class="modal fade" role="dialog" style="height: 600px;" data-backdrop="static" data-keyboard="false">
                            <div class="modal-dialog modal-lg">
                                <!-- Modal content-->
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h4 class="modal-title">Edit Location</h4>
                                    </div>
                                    <div class="modal-body ">
                                        <div class="row">
                                            <div class="form-group col-lg-6">
                                                <label for="praticesname">Location A<span style="color:#CC0000;">*</span></label>
                                                @Html.DropDownList("txteditlocA", (SelectList)ViewBag.alocationlist, "Select Location", new { @class = "form-control", id = "txteditlocA" })
                                                <div style="color:#CC0000;font-weight:400" id="editlocaerror"></div>
                                            </div>

                                        </div>
                                        <div class="row">
                                            <div class="form-group col-lg-6">
                                                <label for="praticesname">Location B</label>

                                                <select id="txteditlocB" name="txteditlocB" class="form-control"></select>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="form-group col-lg-6">
                                                <label for="praticesname">Location C</label>
                                                <select id="txteditlocC" name="txteditlocC" class="form-control"></select>
                                            </div>
                                        </div>
                                    </div>
                                    <div><label style="font-size:12px;color:red ">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>*</span> Mandatory Fields</label></div>


                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-sm saveBtn" data-dismiss="modal" onclick="closeeditloc();">Close</button>
                                        <button type="button" class="btn btn-sm clBtn" id="btnSave" onclick="saveeditloc();">Save</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div id="ccmodal" class="modal fade" role="dialog" style="height: 600px;" data-backdrop="static" data-keyboard="false">

                            <div class="modal-dialog modal-lg">

                                <!-- Modal content-->
                                <div class="modal-content">
                                    <div class="modal-header">

                                        <h4 class="modal-title">Add Cost Center</h4>
                                    </div>
                                    <div class="modal-body ">


                                        <div class="row">
                                            <div class="form-group col-lg-6">
                                                <label for="praticesname">Cost Center<span style="color:#CC0000;">*</span></label>
                                                @Html.DropDownList("txtccA", (SelectList)ViewBag.costalist, "Select Cost Center", new { @class = "form-control form-control-sm", id = "txtccA", @required = true })
                                                <div style="color:#CC0000;font-weight:400" id="ccaerror"></div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="form-group col-lg-6">
                                                <label for="praticesname">Sub-Cost Center</label>

                                                <select id="txtccB" name="txtccB" class="form-control form-control-sm"></select>
                                            </div>
                                        </div>

                                    </div>
                                    <div><label style="font-size:12px;color:red ">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>*</span> Mandatory Fields</label></div>


                                    <div class="modal-footer">
                                        <button type="button" class="btn saveBtn btn-sm" onclick="savecc();">Save</button>
                                        <button type="button" class="btn clBtn btn-sm" data-bs-dismiss="modal" onclick="closecc();">Close</button>
                                        @*<button type="button" class="btn btn-sm saveBtn" data-bs-dismiss="modal">Close</button>*@
                                        @*<button type="button" class="btn btn-sm clBtn" id="btnSave" onclick="saveloc();">Save</button>*@
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div id="editccmodal" class="modal fade" role="dialog" style="height: 600px;" data-backdrop="static" data-keyboard="false">

                            <div class="modal-dialog modal-lg">

                                <!-- Modal content-->
                                <div class="modal-content">
                                    <div class="modal-header">

                                        <h4 class="modal-title">Edit Cost Center</h4>
                                    </div>
                                    <div class="modal-body ">


                                        <div class="row">
                                            <div class="form-group col-lg-6">
                                                <label for="praticesname">Cost Center<span style="color:#CC0000;">*</span></label>
                                                @Html.DropDownList("txteditccA", (SelectList)ViewBag.costalist, "Select Cost center", new { @class = "form-control form-control-sm", id = "txteditccA", @required = true })
                                                <div style="color:#CC0000;font-weight:400" id="editccaerror"></div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="form-group col-lg-6">
                                                <label for="praticesname">Sub-Cost Center</label>

                                                <select id="txteditccB" name="txteditccB" class="form-control form-control-sm"></select>
                                            </div>
                                        </div>

                                    </div>
                                    <div><label style="font-size:12px;color:red ">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>*</span> Mandatory Fields</label></div>


                                    <div class="modal-footer">
                                        <button type="button" class="btn saveBtn" onclick="saveeditcc();">Save</button>
                                        <button type="button" class="btn clBtn" data-bs-dismiss="modal" onclick="closeeditcc();">Close</button>

                                    </div>
                                </div>
                            </div>
                        </div>

                        <div id="editccmodal" class="modal fade" role="dialog" style="height: 600px;" data-backdrop="static" data-keyboard="false">

                            <div class="modal-dialog modal-lg">

                                <!-- Modal content-->
                                <div class="modal-content">
                                    <div class="modal-header">

                                        <h4 class="modal-title">Edit Cost Center</h4>
                                    </div>
                                    <div class="modal-body ">


                                        <div class="row">
                                            <div class="form-group col-lg-6">
                                                <label for="praticesname">Cost Center<span style="color:#CC0000;">*</span></label>
                                                @Html.DropDownList("txteditccA", (SelectList)ViewBag.costalist, "Select Cost center", new { @class = "form-control form-control-sm", id = "txteditccA", @required = true })
                                                <div style="color:#CC0000;font-weight:400" id="editccaerror"></div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="form-group col-lg-6">
                                                <label for="praticesname">Sub-Cost Center</label>

                                                <select id="txteditccB" name="txteditccB" class="form-control form-control-sm"></select>
                                            </div>
                                        </div>

                                    </div>
                                    <div><label style="font-size:12px;color:red ">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>*</span> Mandatory Fields</label></div>


                                    <div class="modal-footer">
                                        <button type="button" class="btn saveBtn" onclick="saveeditcc();">Save</button>
                                        <button type="button" class="btn clBtn" onclick="closeeditcc();">Close</button>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}


<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
@*<script type="text/javascript">

        $('#btnSave').click(function (event) {
           // SaveData();
            e.preventDefault();
            return false;
        });

        //$('#dtStartDate').datetimepicker({
        //    format: 'DD/MM/YYYY',
        //    icons:
        //    {
        //        next: 'fa fa-angle-right',
        //        previous: 'fa fa-angle-left'
        //    },

        //});
        //$('#dtEndDate').datetimepicker({
        //    format: 'DD/MM/YYYY',
        //    icons:
        //    {
        //        next: 'fa fa-angle-right',
        //        previous: 'fa fa-angle-left'
        //    },
        //});



    </script>*@


<script type="text/javascript">

    var srnocnt = '@ViewBag.Srno';
    var srnocntt = '@ViewBag.Srnocc';
    var srnocccnt = 1;

    var srnoassetfcnt = 1;
    var editindex = 0;
    var isbatchopenflag = "no";


    var EndDateStatus = false;
    var StartDateStatus = false;


    $(document).ready(function () {

        var checkbox = $("#IsRangeSelect");
        if ('@ViewBag.MaxmumValue' != null) {

            $("#IsRangeSelect").prop("checked", true);
            israngeselectflag = "yes";
            $("#minvalue").val(@ViewBag.MinmumValue);
            $("#maxvalue").val(@ViewBag.MaxmumValue);
            $("#minvalue").prop("disabled", false);
            $("#maxvalue").prop("disabled", false);
            $("#selectMinValue").prop("disabled", false);
            $("#selectMaxValue").prop("disabled", false);
            $("#selectMinValue").val(@ViewBag.MinmumValue);
            $("#selectMaxValue").val(@ViewBag.MaxmumValue);

        }
        else {
            $("#IsRangeSelect").prop("checked", false);
            israngeselectflag = "no";
        }

        //function enableOrDisableFunctionality() {
        //    if ($(this).prop("checked")) {

        //        israngeselectflag = "yes";
        //        $("#minvalue").prop("disabled", false);
        //        $("#maxvalue").prop("disabled", false);
        //        $("#selectMinValue").prop("disabled", false);
        //        $("#selectMaxValue").prop("disabled", false);
               

        //    } else {

        //        israngeselectflag = "no";
        //        $("#minvalue").prop("disabled", true);
        //        $("#maxvalue").prop("disabled", true);
        //        $("#selectMinValue").prop("disabled", true);
        //        $("#selectMaxValue").prop("disabled", true);
        //        //$("#amount").clearQueue();
        //    }
        //}
        //enableOrDisableFunctionality();

        //checkbox.change(enableOrDisableFunctionality);




        @* $("#txtStartDate").val('@ViewBag.FromDate');
        $("#txtEndDate").val('@ViewBag.ToDate');*@
        $("#BatchDescription").val('@ViewBag.BatchDescription');
        $("#IsBatchOpen").val('@ViewBag.IsBatchOpen');

        if ('@ViewBag.IsBatchOpen' == "Yes" || '@ViewBag.IsBatchOpen' == "yes") {
            $("#IsBatchOpen").prop("checked", true);
        }
        else {
            $("#IsBatchOpen").prop("checked", false);
        }

        $('#IsBatchOpen').change(function () {
            if ($(this).prop("checked")) {
                isbatchopenflag = "yes";

            }
            else {

                isbatchopenflag = "no";
            }
        });

        $('#IsRangeSelect').change(function () {

            let IsRangeSelect = $("#IsRangeSelect").val();


            if (IsRangeSelect == "yes") {
                israngeselectflag = "yes";
                $("#minvalue").prop("disabled", false);
                $("#maxvalue").prop("disabled", false);
                $("#selectMinValue").prop("disabled", false);
                $("#selectMaxValue").prop("disabled", false);

            } else {
                israngeselectflag = "no";
                $("#minvalue").prop("disabled", true);
                $("#maxvalue").prop("disabled", true);
                $("#selectMinValue").prop("disabled", true);
                $("#selectMaxValue").prop("disabled", true);
            }

        });

        $('#minvalue').change(function () {
            let minvalue = $('#minvalue').val();
            let maxvalue = $('#maxvalue').val();

            $('#minvaluelbl').text(minvalue);
            $('#selectMinValue').val(minvalue);


            if (minvalue > maxvalue) {
                $('#maxvalue').val(minvalue);
                $('#maxvaluelbl').text(minvalue);
                $('#selectMaxValue').val(minvalue);
            }

        });
        $('#maxvalue').change(function () {
            let minvalue = $('#minvalue').val();
            let maxvalue = $('#maxvalue').val();

            $('#maxvaluelbl').text(maxvalue);
            $('#selectMaxValue').val(maxvalue);

            if (minvalue > maxvalue) {
                $('#minvalue').val(maxvalue);
                $('#minvaluelbl').text(maxvalue);
                $('#selectMinValue').val(maxvalue);
            }
        });


        $('#selectMinValue').change(function () {
            let selectminvalue = $('#selectMinValue').val();
            let selectmaxvalue = $('#selectMaxValue').val();

            $('#minvaluelbl').text(selectminvalue);
            $('#minvalue').val(selectminvalue);


            if (selectminvalue > selectmaxvalue) {
                $('#selectMaxValue').val(selectminvalue);
                $('#maxvaluelbl').text(selectminvalue);
                $('#maxvalue').val(selectminvalue);
            }
        });

        $('#selectMaxValue').change(function () {
            let selectminvalue = $('#selectMinValue').val();
            let selectmaxvalue = $('#selectMaxValue').val();

            $('#maxvaluelbl').text(selectmaxvalue);
            $('#maxvalue').val(selectmaxvalue);

            if (selectminvalue > selectmaxvalue) {
                $('#minvalue').val(selectmaxvalue);
                $('#minvaluelbl').text(selectmaxvalue);
                $('#selectMinValue').val(selectmaxvalue);
            }
        });




        $("#btnAddloc").click(function () {
            $('#locationmodal').modal('show');
            $("#txtlocA").val("");
            $("#txtlocB ").val("");
            $("#txtlocC ").val("");
        });

    });


//-------------------

        ///onlocation a select load location b dropdown
        $('#txtlocA').change(function () {

            var index = $("#txtlocA option:selected").val();

            //  $('#txtassetno').val(index);
            getlocationb(index);
        });

        $('#txtlocB').change(function () {

            var index = $("#txtlocB option:selected").val();

            // $('#txtassetno').val(index);
            getlocationc(index);
        });

        ///on edit modal location a select load location b dropdown
        $('#txteditlocA').change(function () {

            var index = $("#txteditlocA option:selected").val();
            alert('aaa');
            //  $('#txtassetno').val(index);
            geteditlocationb(index);
        });

        $('#txteditlocB').change(function () {

            var index = $("#txteditlocB option:selected").val();

            // $('#txtassetno').val(index);
            geteditlocationc(index);
        });

    $("#startdateerror,#enddateerror").hide();

    function deleteloc(obj) {
        swal({ title: "Are You Sure?", text: "You won't be able to revert this!", icon: "warning", buttons: true, dangerMode: true }).then((result) => {
            if (result == true) {
                $(obj).parent().parent().remove();
                srnocnt - 1;
            }
        });
    }

    function saveloc() {

        if ($("#txtlocA").find("option:selected").text() == 'Select Location') {
            $("#locaerror").html(" * Please select location");
            $("#locaerror").show();

        }

        if ($("#txtlocA").find("option:selected").text() != 'Select Location'
            && $("#txtlocDate").val() != '') {

            Addlocationtotable();

            $('#locationmodal').modal('hide');
        }
    }

    function getlocationb(id) {
        if (id == "") {
            id = 0;

            var index = $("#txtlocB option:selected").val(0);
        }
        else {
            var ControllerURL = '@Url.Action("getlocationb", "Batch")';
            var url = ControllerURL + "/" + id;
            var procemessage = "<option value='0'> Please wait...</option>";
            $("txtlocB").html(procemessage).show();


            $.ajax({
                url: url,

                cache: false,
                type: "POST",
                success: function (data) {
                    var markup = "<option value='0'>Select Location</option>";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $("#txtlocB").html(markup).show();
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });
        }
    }

    function getlocationc(id) {
            if (id == "")
            {
                id = 0;

                    var index = $("#txtlocC option:selected").val(0);
            }
            else
            {
                var ControllerURL = '@Url.Action("getlocationc", "Batch")';
                      var url = ControllerURL + "/" + id;
                      $.ajax({
                        url: url,

                        cache: false,
                        type: "POST",
                             success: function (data)
                             {
                                var markup = "<option value='0'>Select Location</option>";
                                for (var x = 0; x < data.length; x++) {
                                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                                }
                                $("#txtlocC").html(markup).show();
                             },
                             error: function (reponse)
                             {
                                alert("error : " + reponse);
                             }
                      });
            }

    }

    function Addlocationtotable() {

        var alocname = $("#txtlocA").find("option:selected").text();
        var blocname = $("#txtlocB").find("option:selected").text();
        var clocname = $("#txtlocC").find("option:selected").text();

        var alocids = $("#txtlocA").val();
        var alocid = $("#txtlocA option:selected").val();
        var blocid = $("#txtlocB option:selected").val();
        var clocid = $("#txtlocC option:selected").val();
        //var date = $("#txtlocDate").val();
        if (alocname == "Select Location") {
            alocname = "";
        }
        if (blocname == "Select Location") {
            blocname = "";
        }
        if (clocname == "Select Location") {
            clocname = "";
        }

        //  var assetamt = $("#txtassetamount").val()
        $('#tbllocation').last().append('<tr><td>' + srnocnt + '</td><td hidden>' + alocid + '</td>'
            + '<td hidden>' + blocid + '</td ><td hidden>' + clocid + '</td>'
            + '<td>' + alocname + '</td ><td>' + blocname + '</td><td>' + clocname + '</td><td align="center"> <button type="button" class="btn modBtn btn-sm"'
            + ' aria-label="Left Align"'
            + 'onclick="Editloc(this,' + srnocnt + ');">'
            + '  <i class="fa fa-edit"></i>Edit</button></td><td align="center"> <button type="button" class="btn btn-sm delBtn"'
            + ' aria-label="Center Align"'
            + 'onclick="deleteloc(this);">'
            + '  <i class="fa fa-remove"></i>Delete   </button></td></tr > ');

        srnocnt++;
    }

     function SaveData()
     {
             var startdate = moment($("#txtStartDate").val(), 'DD/MM/YYYY').format('YYYY-MM-DD');
             var enddate = moment($("#txtEndDate").val(), 'DD/MM/YYYY').format('YYYY-MM-DD');
             //var startdate = $('#txtStartDate').val();
             //var enddate = $('#txtEndDate').val();
             //var startdate = moment($("#txtStartDate").val()).format('YYYY-MM-DD');
             //var enddate = moment($("#txtEndDate").val()).format('YYYY-MM-DD');

             if (new Date(startdate) >= new Date(enddate)) {
                 swal("Alert", "To Date must be greater than From Date", "warning");
             }
             else {

                 //var tbllocation = $('#tbllocation tbody tr:has(td)').map(function (i, v) {
                 //    var $td = $('td', this);
                 //    var Tablelocationa = $td.eq(1).html();
                 //    alert(Tablelocationa)

                 //    var Tablelocationb = $td.eq(2).html();
                 //    alert(Tablelocationb)
                 //    var Tablelocationc = $td.eq(3).html();

                 //    return {

                 //        LocAid: Tablelocationa,
                 //        LocBid: Tablelocationb,
                 //        LocCid: Tablelocationc
                 //    }
                 //}).get();
                 //alert(tbllocation)


                 var StartDate = $('#txtStartDate').val();
                 var EndDate = $('#txtEndDate').val();
                 var Minval = $('#selectMinValue').val();
                 var Maxval = $('#selectMaxValue').val();
                 var BatchDescription = $('#BatchDescription').val();
                 var IsBatchOpen = isbatchopenflag;
                // var IsRangeSelect = israngeselectflag;

                // debugger;


                 if (StartDate == '') {
                     StartDateStatus = false;
                 }
                 else {
                     //$('#assignError').hide();
                     StartDateStatus = true;
                 }
                 if (EndDate == '') {
                     EndDateStatus = false;
                 }
                 else {
                     //$('#assignError').hide();
                     EndDateStatus = true;
                 }

              

                 if (StartDateStatus == true && EndDateStatus == true)
                 {
                     $("#startdateerror,#enddateerror").hide();

                     var tbllocation = $('#tbllocation tbody tr:has(td)').map(function (i, v) {
                         var $td = $('td', this);
                         var Tablelocationa = $td.eq(1).html();
                         //alert(Tablelocationa)

                         var Tablelocationb = $td.eq(2).html();
                         //alert(Tablelocationb)
                         var Tablelocationc = $td.eq(3).html();

                         return {

                             LocAid: Tablelocationa,
                             LocBid: Tablelocationb,
                             LocCid: Tablelocationc
                         }
                     }).get();


                     var tblcostcenter = $('#tblcostcenter tbody tr:has(td)').map(function (i, v) {
                         var $td = $('td', this);
                         var Tablecostcentera = $td.eq(1).html();
                         //alert(Tablelocationa)

                         var Tablecostcenterb = $td.eq(2).html();
                         //alert(Tablelocationb)


                         return {

                             CCid: Tablecostcentera,
                             SCCid: Tablecostcenterb

                         }
                     }).get();

                     //var Strstartdate = moment(StartDate, "DD/MM/YYYY").format("YYYY-MM-DD");
                     //var StrEnddate = moment(EndDate, "DD/MM/YYYY").format("YYYY-MM-DD");
                     var Strstartdate = moment($('#txtStartDate').val()).format("YYYY-MM-DD");
                     var StrEnddate = moment($('#txtEndDate').val()).format("YYYY-MM-DD");

                   //  debugger;

                     var StartDate = $('#txtStartDate').val();
                     var EndDate = $('#txtEndDate').val();
                     var minvalue = $('#minvalue').val();
                     var maxvalue = $("#maxvalue").val();

                   //  debugger;

                 var Editid = '@ViewBag.ID';
                 var postdata =
                     {
                         "FromDate": Strstartdate,
                         "ToDate": StrEnddate,
                         "BatchDescription": BatchDescription,
                         "IsBatchOpen": IsBatchOpen,
                         "MinimumValue": minvalue,
                         "MaximumValue": maxvalue,
                         "locationlist": tbllocation,
                         "costcenterlist": tblcostcenter,
                         "ID": Editid

                         //"LoanViewModellist": tbl
                     };

                   //  debugger;

                 var form = $('#frmNewEmp');
                 var token = $('input[name="__RequestVerificationToken"]', form).val();
                 var headers = {};
                 headers['__RequestVerificationToken'] = token;
                 swal({
                     title: "Are You Sure?", text: "You won't be able to revert this!",
                     icon: "warning", buttons: true, dangerMode: true
                 }).then((result) => {
                     if (result == true) {

                         var ControllerURL = '@Url.Action("Edit", "Batch")';

                         //alert(ControllerURL);
                         var returnURL = '@Url.Action("Index", "Batch")';
                         $.ajax({
                             type: 'POST',
                             url: ControllerURL,
                             contentType: "application/json",
                             headers: headers,
                             data: JSON.stringify(postdata),
                             success: function (res) {
                                 if (res == "Failed") {
                                     swal("Alert", "You Cannot Add this Record", "warning");
                                 }
                                 else {
                                     swal({ title: "Successfully Edited!", icon: "success" }).then((result) => {
                                         if (result == true) {
                                             window.location.replace(returnURL);
                                         }
                                     });
                                 }

                             },

                             failure: function () { alert("Error"); }

                         });
                     }
                     });
                     ////////////------------------
                     @*var ControllerURL = '@Url.Action("Edit", "Batch")';

                           //  alert(ControllerURL);
                            var returnURL = '@Url.Action("Index", "Batch")';
                            $.ajax({
                                type: 'POST',
                                url: ControllerURL,
                                contentType: "application/json",
                                data: JSON.stringify(postdata),
                                success: function (res) {
                                    if (res == "Failed") {
                                       // swal("Alert", "You Cannot Add this Record", "warning");
                                    }
                                    else {
                                       // swal({ title: "Successfully Added!", icon: "success" }).then((result) => {
                                            if (result == true) {
                                                window.location.replace(returnURL);
                                            }
                                       // });
                                    }

                                },

                                failure: function () { alert("Error"); }

                            });*@

                 }
                 else
                 {
                     if (StartDateStatus == true && EndDateStatus == false) {
                         $('#enddateerror').show();
                         $('#startdateerror').hide();

                     } else if (EndDateStatus == true && StartDateStatus == false) {
                         $('#enddateerror').hide();

                         $('#startdateerror').show();
                     } else {
                         $('#enddateerror').show();

                         $('#startdateerror').show();

                     }

                     return false;
                 }

             }
     }

     function closeloc() {
            var url = '@Url.Action("index", "Batch")';
            window.location = url;

    $('#locationmodal').modal('hide');
}

    //---------------------------------------------Edit Loc--------------

    function Editloc(id, editcnt) {
        //$(id).parent();
        editindex = editcnt;
        var tr = $(id).parent().parent();
        var locaid = $(tr).find("td").eq(1).html();
        var locbid = $(tr).find("td").eq(2).html();
        var loccid = $(tr).find("td").eq(3).html();


        $("#txteditlocA").val(locaid);

        // $("#txtedassetno").prop('selectedIndex', assetno)
        $('#txteditlocB').val(locbid);
        $('#txteditlocC').val(loccid);


        geteditlocationb2(locaid, locbid, loccid)
        $('#editlocationmodal').modal('show');
    }

    function saveeditloc() {


        if ($("#txteditlocA").find("option:selected").text() == 'Select Location') {
            $("#editlocaerror").html(" * Please select location");
            $("#editlocaerror").show();

        }

        if ($("#txteditlocA").find("option:selected").text() != 'Select Location'
            != '') {

            editlocationtotable();
            $('#editlocationmodal').modal('hide');

        }
    }

    function editlocationtotable() {
        var alocname = $("#txteditlocA").find("option:selected").text();
        var blocname = $("#txteditlocB").find("option:selected").text();
        var clocname = $("#txteditlocC").find("option:selected").text();
        //alert(blocname)
        //alert(clocname)

        var alocid = $("#txteditlocA option:selected").val();
        var blocid = $("#txteditlocB option:selected").val();
        var clocid = $("#txteditlocC option:selected").val();

        if (alocname == "Select Location") {
            alocname = "";
        }
        if (blocname == "Select Location") {
            blocname = "";
        }
        if (clocname == "Select Location") {
            clocname = "";
        }
        var tbl = $('#tbllocation tbody tr:has(td)').each(function () {
            var srno = $(this).find("td").eq(0).html();
            if (srno == editindex) {
                //alert('check');
                $(this).find("td").eq(1).html(alocid);
                $(this).find("td").eq(2).html(blocid);
                $(this).find("td").eq(3).html(clocid);

                $(this).find("td").eq(4).html(alocname);
                $(this).find("td").eq(5).html(blocname);
                $(this).find("td").eq(6).html(clocname);
            }
        })

    }

    function geteditlocationb(id) {
            if (id == "") {
                id = 0;

                    var index = $("#txteditlocB option:selected").val(0);
            }
            else {
                var ControllerURL = '@Url.Action("getlocationb", "Batch")';
                    var url = ControllerURL + "/" + id;
                    var procemessage = "<option value='0'> Please wait...</option>";
                    $("txteditlocB").html(procemessage).show();


                    $.ajax({
                        url: url,

                        cache: false,
                        type: "POST",
                        success: function (data) {
                            var markup = "<option value='0'>Select location</option>";
                            for (var x = 0; x < data.length; x++) {
                                markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                            }
                            $("#txteditlocB").html(markup).show();
                        },
                        error: function (reponse) {
                            alert("error : " + reponse);
                        }
                    });
                    }
    }

    function geteditlocationc(id) {
            if (id == "") {
                id = 0;

                    var index = $("#txteditlocC option:selected").val(0);
            }
            else {
                var ControllerURL = '@Url.Action("getlocationc", "Batch")';
                      var url = ControllerURL + "/" + id;
                         $.ajax({
                        url: url,

                        cache: false,
                        type: "POST",
                        success: function (data) {
                            var markup = "<option value='0'>Select Location</option>";
                            for (var x = 0; x < data.length; x++) {
                                markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                            }
                            $("#txteditlocC").html(markup).show();
                        },
                        error: function (reponse) {
                            alert("error : " + reponse);
                        }
                    });
                   }

    }

    function geteditlocationb2(locaid,locbid,loccid) {
                if (locaid == "") {
                    locaid = 0;

                    var index = $("#txteditlocB option:selected").val(0);
            }
            else {
                var ControllerURL = '@Url.Action("getlocationb", "Batch")';
                    var url = ControllerURL + "/" + locaid;
                    var procemessage = "<option value='0'> Please wait...</option>";
                    $("txteditlocB").html(procemessage).show();


                    $.ajax({
                        url: url,

                        cache: false,
                        type: "POST",
                        success: function (data) {
                            var markup = "<option value='0'>Select location</option>";
                            for (var x = 0; x < data.length; x++) {
                                markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                            }
                            $("#txteditlocB").html(markup).show();
                            $("#txteditlocB ").val(locbid);
                            geteditlocationc2(locbid, loccid)
                        },
                        error: function (reponse) {
                            alert("error : " + reponse);
                        }
                    });
                    }
    }

    function geteditlocationc2(locbid,loccid) {
                if (locbid == "") {
                    locbid = 0;

                    var index = $("#txteditlocC option:selected").val(0);
            }
            else {
                var ControllerURL = '@Url.Action("getlocationc", "Batch")';
                    var url = ControllerURL + "/" + locbid;
                         $.ajax({
                        url: url,

                        cache: false,
                        type: "POST",
                        success: function (data) {
                            var markup = "<option value='0'>Select Location</option>";
                            for (var x = 0; x < data.length; x++) {
                                markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                            }
                            $("#txteditlocC").html(markup).show();
                            $("#txteditlocC").val(loccid);
                        },
                        error: function (reponse) {
                            alert("error : " + reponse);
                        }
                    });
                   }

        }


        //-------------------------------------------------------------------------------


    $("#btnAddCC").click(function () {

            $("#txtccA").val("");
            $("#txtccB").val("");
            // $("#txtpercentage").val("")
            // $("#txtccDate").val("");
            $('#ccmodal').modal('show');

        });

    $('#txtccA').change(function () {

        var index = $("#txtccA option:selected").val();


        //  $('#txtassetno').val(index);
        getcostcenterb(index);
    });

    $('#txteditccA').change(function () {


        var index = $("#txteditccA option:selected").val();


        //  $('#txtassetno').val(index);
        geteditcostcenterb(index);
    });

    function getcostcenterb(id) {
    if (id == "") {
        id = 0;

        var index = $("#txtccB option:selected").val(0);
    }
    else {
        var ControllerURL = '@Url.Action("getcostcenterb", "Batch")';
        var url = ControllerURL + "/" + id;
        var procemessage = "<option value='0'> Please wait...</option>";
        $("txtccB").html(procemessage).show();


        $.ajax({
            url: url,

            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "<option value='0'>Select Costcenter</option>";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                }
                $("#txtccB").html(markup).show();
               // debugger;
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });
    }
}

    function Addcostcentertotable() {

        var ccdescription = $("#txtccA").find("option:selected").text();
        var sccdescription = $("#txtccB").find("option:selected").text();


        //  var accids = $("#txtccA").val();
        var accid = $("#txtccA option:selected").val();
        var bsccid = $("#txtccB option:selected").val();

        var date = $("#txtccDate").val();
        // var percentage = $("#txtpercentage").val();

        if (ccdescription == "Select costCenter") {
            ccdescription = "";
        }
        if (sccdescription == "Select costCenter") {
            sccdescription = "";
        }

        //debugger;
        //  var assetamt = $("#txtassetamount").val()
        $('#tblcostcenter').last().append('<tr><td>' + srnocntt + '</td><td hidden>' + accid + '</td>'
            + '<td hidden>' + bsccid + '</td >'
            + '<td>' + ccdescription + '</td ><td>' + sccdescription + '</td><td align="center"> <button type="button" class="btn modBtn btn-sm"'
            + ' aria-label="Left Align"'
            + 'onclick="Editcc(this,' + srnocntt + ');">'
            + '  <i class="fa fa-edit"></i>Edit</button></td><td align="center"> <button type="button" class="btn btn-sm delBtn"'
            + ' aria-label="Center Align"'
            + 'onclick="deletecc(this);">'
            + '  <i class="fa fa-remove"></i>Delete   </button></td></tr > ');

        srnocntt++;
    }

    function savecc() {

        if ($("#txtccA").find("option:selected").text() == 'Select Costcenter') {
            $("#ccaerror").html(" * Please select cost center");
            $("#ccaerror").show();

        }
        if ($("#txtccA").find("option:selected").text() != 'Select Costcenter') {

            Addcostcentertotable();
           // debugger;
            $('#ccmodal').modal('hide');
        }
    }

    function deletecc(obj) {
        swal({ title: "Are You Sure?", text: "You won't be able to revert this!", icon: "warning", buttons: true, dangerMode: true }).then((result) => {
            if (result == true) {
                $(obj).parent().parent().remove();
                srnocntt - 1;
            }
        });
    }

    //------------------------------------Edit Costcenter-----------------------

    function saveeditcc() {

        if ($("#txteditccA").find("option:selected").text() == 'Select Costcenter') {
            $("#editccaerror").html(" * Please select Costcenter");
            $("#editccaerror").show();

        }
        if ($("#txteditccA").find("option:selected").text() != 'Select Costcenter'
            != '') {

            editcostcentertotable();
           // debugger;
            $('#editccmodal').modal('hide');

        }
    }

    function Editcc(id, editcnt) {
        //$(id).parent();
        editindex = editcnt;
        var tr = $(id).parent().parent();
        var ccaid = $(tr).find("td").eq(1).html();
        var sccid = $(tr).find("td").eq(2).html();

        $("#txteditccA").val(ccaid);

        // $("#txtedassetno").prop('selectedIndex', assetno)
        $('#txteditccB').val(sccid);

        geteditcostcenterb2(ccaid, sccid)
        //debugger;
        $('#editccmodal').modal('show');
    }

    function geteditcostcenterb(id) {
            if (id == "") {
                id = 0;

                    var index = $("#txteditccB option:selected").val(0);
            }
            else {
                var ControllerURL = '@Url.Action("getcostcenterb", "Batch")';
                var url = ControllerURL + "/" + id;
               // debugger;
                         $.ajax({
                        url: url,

                        cache: false,
                        type: "POST",
                        success: function (data) {
                            var markup = "<option value='0'>Select costcenter</option>";
                            for (var x = 0; x < data.length; x++) {
                                markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                            }
                            $("#txteditccB").html(markup).show();
                        },
                        error: function (reponse) {
                            alert("error : " + reponse);
                        }
                    });
            }

    }

    function geteditcostcenterb2(ccaid,sccid) {
                if (ccaid == "") {
                    ccaid = 0;

                    var index = $("#txteditccB option:selected").val(0);
            }
            else {
                var ControllerURL = '@Url.Action("getcostcenterb", "Batch")';
                    var url = ControllerURL + "/" + ccaid;
                         $.ajax({
                        url: url,

                        cache: false,
                        type: "POST",
                        success: function (data) {
                            var markup = "<option value='0'>Select Costcenter</option>";
                            for (var x = 0; x < data.length; x++) {
                                markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                            }
                            $("#txteditccB").html(markup).show();
                            $("#txteditccB").val(sccid);
                           // debugger;
                        },
                        error: function (reponse) {
                            alert("error : " + reponse);
                        }
                    });
                }

    }

    function editcostcentertotable() {
        var ccdescription = $("#txteditccA").find("option:selected").text();
        var sccdescription = $("#txteditccB").find("option:selected").text();

        var accid = $("#txteditccA option:selected").val();
        var bsccid = $("#txteditccB option:selected").val();

        if (ccdescription == "Select Costcenter") {
            ccdescription = "";
        }
        if (sccdescription == "Select Costcenter") {
            sccdescription = "";
        }

      //  debugger;
        var tbl = $('#tblcostcenter tbody tr:has(td)').each(function () {
            var srno = $(this).find("td").eq(0).html();
            if (srno == editindex) {
                //alert('check');
                $(this).find("td").eq(1).html(accid);
                $(this).find("td").eq(2).html(bsccid);

                $(this).find("td").eq(3).html(ccdescription);
                $(this).find("td").eq(4).html(sccdescription);

                debugger;
            }
        })

    }

</script>
