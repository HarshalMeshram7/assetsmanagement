@model VerifyWebApp.Models.Login
@{
    ViewBag.Title = "Add";
}
<div class="modal-content">
    <div class="modal-header">

        <h4 class="modal-title">Edit User</h4>
        @*<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>*@
        <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    </div>
    @using (@Html.BeginForm(null, null, FormMethod.Post, new { id = "frmNewEmp", name = "frmNewEmp" }))
    {
        @Html.AntiForgeryToken();
        <div class="modal-body">

            @Html.ValidationSummary(true)
            <div class="row">
                <div class="col-lg-4">
                    <div class="form-group">
                        <label for="Company">User Name<span>*</span></label>
                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @required = "required", @readonly = "readonly"   })
                        <div style="color:#CC0000;font-weight:400" class="text-danger error">@Html.ValidationMessageFor(m => m.UserName)</div>
                        @Html.AntiForgeryToken()
                    </div>
                </div>
                @*<div class="col-lg-3">
                        <div class="form-group">
                            <label for="Company">Password<span>*</span></label>
                            @Html.TextBoxFor(m => m.Password, new { @class = "form-control", @required = "required" })
                            <div style="color:#CC0000;font-weight:400" class="text-danger error">@Html.ValidationMessageFor(m => m.Password)</div>
                            @Html.AntiForgeryToken()
                        </div>
                    </div>*@
            </div>
            <div class="row">
                <div class="col-lg-4">
                    <div class="form-group">
                        <label for="Company">First Name<span>*</span></label>
                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", @required = "required" })
                        <div style="color:#CC0000;font-weight:400" class="text-danger error">@Html.ValidationMessageFor(m => m.FirstName)</div>
                        @Html.AntiForgeryToken()
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label for="Company">Last Name<span>*</span></label>
                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", @required = "required" })
                        <div style="color:#CC0000;font-weight:400" class="text-danger error">@Html.ValidationMessageFor(m => m.LastName)</div>
                        @Html.AntiForgeryToken()
                    </div>
                </div>
            </div>
            <div class="row">

                <div class="col-lg-4">
                    <div class="form-group">
                        <label for="Company">Mobile No<span>*</span></label>
                        @Html.TextBoxFor(m => m.MobileNo, new { @class = "form-control", @required = "required" })
                        <div style="color:#CC0000;font-weight:400" class="text-danger error">@Html.ValidationMessageFor(m => m.MobileNo)</div>
                        @Html.AntiForgeryToken()
                    </div>
                </div>
                <div class="col-lg-4">

                    <div class="form-group">
                        <label for="Company">Email Id<span>*</span></label>
                        @Html.TextBoxFor(m => m.EmailId, new { @class = "form-control", @required = "required" })
                        <div style="color:#CC0000;font-weight:400" class="text-danger error">@Html.ValidationMessageFor(m => m.EmailId)</div>
                        @Html.AntiForgeryToken()
                    </div>
                </div>
            </div>
            <div class="row">

                <div class="col-lg-4">
                    <div class="form-group">
                        <label for="Company">Address</label>
                        @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
                        <div style="color:#CC0000;font-weight:400" class="text-danger error">@Html.ValidationMessageFor(m => m.Address)</div>
                        @Html.AntiForgeryToken()
                    </div>
                </div>
            </div>
           
            <div class="row">
                <div class="col-lg-4">
                    <div class="form-group">
                        <input type="checkbox" id="isappaccess" />
                        <label for="praticesname" id="lblindex">Allow Access to Mobile App</label>
                    </div>

                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <input type="checkbox" id="twofactor" name="twofactor" />
                        <label for="praticesname" id="lblindex">Enable 2-Factor Auth</label>
                    </div>
                </div>
            </div>

            <div><label style="font-size:12px;color:red "><span>*</span> Mandatory Fields</label></div>
        </div>
        <div class="modal-footer">
            @*<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>*@
            <button type="button" class="btn btn-sm clBtn" id="btnClose" data-bs-dismiss="modal">Close</button>
            <button type="button" class="btn btn-primary" id="btnSave">Save</button>
        </div>
    }
</div><!-- /.modal-content -->



<script type="text/javascript">


    $('#btnSave').click(function (event) {
        SaveData();
        e.preventDefault();
        return false;
    });



    function getToken() {
        var form = $('#frmNewEmp');
        var token = $('input[name="__RequestVerificationToken"]', form).val();
        console.log('token' + token);
        var headers = {};
        headers['__RequestVerificationToken'] = token;
        return headers;
    }


    var isappaccess = "no";
    $(document).ready(function ($) {
       // alert(result);

        //$('#frmNewEmp').removeData('validator');
        //$('#frmNewEmp').removeData('unobtrusiveValidation');
        //$("#frmNewEmp").each(function () { $.data($(this)[0], 'validator', false); }); //enable to display the error messages
        //$.validator.unobtrusive.parse("#frmNewEmp");
        //$('#frmNewEmp').submit(function (e) {

        //    //  e.preventDefault();

        //    var result;
        //    result = $('#frmNewEmp').valid();
        //    console.log(result);

        //    //alert(result);
        //    if (result == true) {
        //        SaveData();
        //    }
        //    e.preventDefault();
        //    return false;


     //   });
        $('#isappaccess').change(function () {
            if ($(this).is(':checked')) {
                isappaccess = "yes";

            }
            else {
                isappaccess = "no";

            }
        });

         if ('@Model.IsAppAccess' == "yes") {
             $("#isappaccess").prop("checked", true);
             isappaccess = "yes";
                }
                else {

             $("#isappaccess").prop("checked", false);
             isappaccess = "no";
        }

         if ('@Model.IsTwoFactor' == "yes") {
             $("#twofactor").prop("checked", true);
             twofactor = "yes";
                }
                else {

             $("#twofactor").prop("checked", false);
             twofactor = "no";
        }

        
    });




   function SaveData() {

        var result;
        var Username;
        var Password;
        var FirstName;
        var LastName;
        var Address;
        var MobileNo;
        var EmailId;

        //alert('2');

        Username = $('#UserName').val();
     //   Password = $('#Password').val();
        FirstName = $('#FirstName').val();
        LastName = $('#LastName').val();
        Address = $('#Address').val();
        MobileNo = $('#MobileNo').val();
       EmailId = $('#EmailId').val();
       twofactor = $('#twofactor').prop('checked')

       if (twofactor == true) {
           twofactor = "yes"
       } else {
           twofactor = "no"
       }


            var postdata =
            {
                    "UserName": Username,
                   // "Password": Password,
                    "FirstName": FirstName,
                    "LastName": LastName,
                    "Address": Address,
                    "MobileNo": MobileNo,
                    "EmailId": EmailId,
                "IsAppAccess": isappaccess,
                "IsTwoFactor": twofactor

            };
            //

            /*
            var form = $('#frmNewEmp');
            var token = $('input[name="__RequestVerificationToken"]', form).val();
            var headers = {};
            headers['__RequestVerificationToken'] = token;
            */


            swal({ title: "Are You Sure?", text: "You won't be able to revert this!", icon: "warning", buttons: true, dangerMode: true }).then((result) => {
                if (result == true) {
                    var ControllerURL = '@Url.Action("Edit", "Login")';
                    var returnURL = '@Url.Action("Index", "Login")';

                    $.ajax({
                        type: 'POST',
                        url: ControllerURL,
                        contentType: "application/json",
                        headers: getToken(),
                        data: JSON.stringify(postdata),
                        success: function (res) {
                            if (res == "Failed") {
                                swal("Alert", "You Cannot Add this Record", "warning");
                            }
                            else
                            {
                                swal({ title: "Successfully Edited!", icon: "success" }).then((result) => {
                                    if (result == true) {
                                        window.location.replace(returnURL);
                                        }
                                    });
                            }

                        },
                        failure: function () { alert("Error"); }
                    });
                    }
                });
             }
</script>



